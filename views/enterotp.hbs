<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enter OTP</title>
    <!-- FontAwesome CDN for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <meta http-equiv="Cache-Control" content="no-store" />

    <style>
        body {
            font-family: Arial, sans-serif;
            background-image: url('/admin/images/bg.png');
            background-size: cover;
            background-position: center;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .otp-container {
            background-color: rgba(255, 255, 255, 0.9);
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            width: 520px;
            box-sizing: border-box;
        }

        .otp-container h2 {
            text-align: center;
            color: #333;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #555;
        }

        .form-group input {
            width: 100%;
            height: 50px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
            font-size: 16px;
        }

        .submit-button {
            width: 100%;
            height: 50px;
            padding: 10px;
            background-color: #0fa5ca;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            margin-bottom: 30px;
        }

        .submit-button:hover {
            background-color: #0fa5ca;
        }

        .resend-otp {
            text-align: center;
            margin-top: 10px;
        }

        .resend-otp a {
            color: #f06037;
            text-decoration: none;
        }

        .resend-otp a:hover {
            text-decoration: underline;
        }

        /* Toast Notification CSS */
        .toast {
            visibility: hidden;
            max-width: 50%;
            margin: 0 auto;
            background-color: #333;
            color: #fff;
            text-align: center;
            border-radius: 5px;
            padding: 26px;
            position: fixed;
            z-index: 1;
            right: 10px;
            top: 30px;
            font-size: 17px;
            transform: translateX(-50%);
        }

        .toast.show {
            visibility: visible;
            animation: fadein 0.5s, fadeout 0.5s 2.5s;
        }

        @keyframes fadein {
            from {
                right: 0;
                opacity: 0;
            }

            to {
                right: 10px;
                opacity: 1;
            }
        }

        @keyframes fadeout {
            from {
                right: 10px;
                opacity: 1;
            }

            to {
                right: 0;
                opacity: 0;
            }
        }

        .toast-success {
            background-color: rgb(13, 223, 13);
        }

        .toast-error {
            background-color: red;
        }
    </style>
</head>

<body>
    <div class="otp-container">
        <div aria-live="polite" aria-atomic="true" style="z-index: 1050;">
            <div id="toast-container" style="position: absolute; right: 0;" class="toast-container p-3"></div>
        </div>
        <h2>Enter OTP</h2>
        <!-- Toast Notification Element -->
        <div id="toast" class="toast"></div>

        <form id="otp-form" action="/auth/verify" method="POST" onsubmit="return validateOtp()">
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" readonly value="{{email}}">
            </div>
            <div class="form-group">
                <label for="otp">OTP</label>
                <input type="number" id="otp" name="otp" required maxlength="6" pattern="\d{6}"
                    oninput="this.value = this.value.slice(0, 6)" title="Please enter exactly 6 digits">
                <p class="error-message" id="otp-error" style="color: red; display: none; text-align: center;">Please
                    enter a 6-digit OTP.</p>
            </div>

            {{!-- <p style="color: red; text-align: center;">{{error}}</p> --}}
            {{!-- <p style="color: rgb(18, 210, 47); text-align: center;">{{successm}}</p> --}}

            <button type="submit" class="submit-button">Submit</button>
        </form>
        <div class="resend-otp">
            <a href="/admin/forgotpassword/resendotp/?email={{email}}">Resend OTP?</a>
        </div>
    </div>

    <script>
        // Clear the form fields when the page is loaded or revisited after back navigation
        window.addEventListener('pageshow', function (event) {
            if (event.persisted || window.performance && window.performance.navigation.type === 2) {
                // Reset the form if the page is loaded from cache (after back navigation)
                document.getElementById('otp-form').reset();
            }
        });

        // Function to validate OTP input
        function validateOtp() {
            const otpInput = document.getElementById('otp');
            const otpError = document.getElementById('otp-error');

            if (otpInput.value.length < 6) {
                otpError.style.display = 'block'; // Show error message if OTP is less than 6 digits
                return false; // Prevent form submission
            } else {
                otpError.style.display = 'none'; // Hide error message
                return true; // Allow form submission
            }
        }

        function showToast(message, type) {
            const toast = document.getElementById('toast');
            toast.className = 'toast show ' + (type === 'success' ? 'toast-success' : 'toast-error');
            toast.textContent = message;

            setTimeout(function () {
                toast.className = toast.className.replace('show', '');
            }, 3000);
        }

        // Simulate backend messages (Replace these with actual backend data)
        const error = '{{error}}'; // Backend error
        const success = '{{success}}'; // Backend success

        // Display the appropriate toast message on page load
        if (error) {
            showToast(error, 'error');
        } else if (success) {
            showToast(success, 'success');
        }
    </script>

    <script>
        // Check if the page needs to be reloaded when i click back button
        window.addEventListener('pageshow', function (event) {
            if (event.persisted || (window.performance && window.performance.navigation.type === 2)) {
                // Check if the page is loaded from the cache or back navigation
                if (!sessionStorage.getItem('reloaded')) {
                    // Set a flag in sessionStorage to prevent multiple reloads
                    sessionStorage.setItem('reloaded', 'true');
                    // Reload the page
                    window.location.reload();
                }
            }
        });

        // Reset the sessionStorage flag when the page is unloaded
        window.addEventListener('beforeunload', function () {
            sessionStorage.removeItem('reloaded');
        });
    </script>
</body>



</html>