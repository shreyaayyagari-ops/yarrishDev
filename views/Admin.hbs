{{>header}}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/intl-tel-input@17.0.13/build/css/intlTelInput.min.css">
<script src="https://cdn.jsdelivr.net/npm/intl-tel-input@17.0.13/build/js/intlTelInput.min.js"></script>
<style>
  #phone {
    padding-left: 50px;
    width: 470px;
  }

  .no-spinner::-webkit-inner-spin-button,
  .no-spinner::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  .no-spinner {
    -moz-appearance: textfield;
  }
</style>

<title>Admins</title>
<div class="row p-2" style="margin: 0px !important;">
  <div class="col-md-12">
    <div class="card mt-2" style="border-left: 2px solid black;">
      {{!-- {{!-- <div class="alert-success">{{success}}</div>
      <div class="alert-danger">{{error}}</div> --}}
      <div class="card-header" style="background-color:white; color:#2c9686white;">
        <h4><b>Admins</b></h4>
      </div>
      <div class="card-body p-2">
        <div id="example1_wrapper">
          <div class="row">
            <div class="col-sm-12">
              <ol class="float-sm-right">
                <button href="" id="" data-bs-toggle="modal" data-bs-target="#addModal"
                  style="background-color: rgb(0, 0, 0); color:white; border:none; border-radius:5px; width: 180px; height: 40px; "><i
                    class="fa-solid fa-plus"></i> Add Admin</button>
              </ol>
            </div>
            <div class="col-sm-12 table-responsive">
              <table id="example2" class="table table-bordered table-striped" aria-describedby="example1_info">
                <thead>
                  <tr>
                    <th>S.No</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Mobile</th>
                    <th>Status</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  {{#each allUser}}
                  <tr>
                    <td>{{inc @index}}</td>
                    <td>{{this.name}}</td>
                    <td>{{this.email}}</td>
                    <td>{{this.phone}}</td>
                    <td>{{this.status}}</td>
                    <td>
                      <a href="/admin/Admin/{{this._id}}" class="btn btn-md btn-info m-1">
                        <i class="fa-solid fa-eye"></i>
                      </a>
                      <a href="javascript:void(0);" data-bs-toggle="modal" data-bs-target="#updateModal"
                        class="btn btn-md btn-warning m-1" data-id="{{this._id}}" data-name="{{this.name}}"
                        data-email="{{this.email}}" data-phone="{{this.phone}}" data-status="{{this.status}}">
                        <i class="fa-solid fa-edit"></i>
                      </a>
                      {{!-- <a href="javascript:void(0);" data-bs-toggle="modal" data-id="{{this._id}}"
                        data-bs-target="#deleteModal" class="btn btn-md btn-danger m-1">
                        <i class="fa-solid fa-trash"></i>
                      </a> --}}
                    </td>
                  </tr>
                  {{/each}}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Add Modal -->
<div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addModalLabel" style="color: black; font-weight: bold; font-size: 40px;">Add Admin
        </h5>
      </div>
      <form action="/admin/store-Admin" method="post" enctype="multipart/form-data" onsubmit="changeButtonState()">
        <div class="modal-body">
          <label for="name">Name</label>
          <input type="text" class="form-control" id="name" name="name" placeholder="First Name" required maxlength="30"
            minlength="3" pattern="^[a-zA-Z\s]+$">
          <small id="nameError" class="text-danger" style="display: none;">Name should only contain letters and spaces
            (3-30 characters).</small>
        </div>



        <div class="modal-body">
          <label for="email">Email</label>
          <input type="text" class="form-control" name="email" id="email" placeholder="Email" required maxlength="50"
            oninput="validateEmail(this)">
          <small id="emailError" style="color: red; display: none;">Please enter a valid email address.</small>
        </div>
        <div class="modal-body">
          <label for="phone">Mobile</label>
          {{!-- <div class="input-group"> --}}
            <input type="number" class="form-control no-spinner" name="phone" placeholder="Mobile Number"
              value="{{User.phone}}" required>
            <span id="phone-error2" class="text-danger" style="display: none;">Phone number required.</span>
            {{!--
          </div> --}}
        </div>
        <div class="modal-body">
          <label for="">Password</label>
          <div class="input-group">
            <input type="password" class="form-control" name="password" placeholder="Enter Password here" required
              pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,14}$"
              title="Password must be 8-14 characters long, include at least one uppercase letter, one lowercase letter, one number, and one special character."
              id="password">
            <button type="button" class="btn btn-outline-secondary"
              onclick="togglePasswordVisibility('password', this)">
              <i class="fas fa-eye"></i>
            </button>
          </div>
        </div>

        <div class="modal-body">
          <label for="">Confirm Password</label>
          <div class="input-group">
            <input type="password" class="form-control" name="confirmPassword" placeholder="Confirm Password here"
              required id="confirmPassword">
            <button type="button" class="btn btn-outline-secondary"
              onclick="togglePasswordVisibility('confirmPassword', this)">
              <i class="fas fa-eye"></i>
            </button>
          </div>
          <span id="passwordError" style="color: red; display: none;">Passwords don't match!</span>
        </div>

        <div class="modal-footer">
          <button type="submit" class="btn btn-success" id="addButton">Add Admin</button>
        </div>

      </form>
    </div>
  </div>
</div>

<script>

  function changeButtonState() {
    var submitButton = document.getElementById('submitButton');
    submitButton.textContent = 'Adding...';
    submitButton.disabled = true;
  }
</script>



<!-- Update Modal -->
<div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h3 style="color: black; font-weight: bold;">Update Admin</h3>
      </div>
      <form id="updateForm" action="/admin/update-admin/{{this._id}}" method="post" enctype="multipart/form-data">
        <div class="modal-body">
          <label for="update-name">Name</label>
          <input type="text" class="form-control" name="name" id="update-name" placeholder="Name" required
            maxlength="30" minlength="3" pattern="^[a-zA-Z\s]+$" oninput="validateName(this)" />
          <small id="nameError" class="text-danger" style="display: none;">
            Name should only contain letters and spaces (3-30 characters).
          </small>
        </div>

        <div class="modal-body">
          <label for="update-email">Email</label>
          <input type="text" class="form-control" name="email" id="update-email" placeholder="Email" required
            maxlength="50" oninput="validateEmail(this)" />
          <small id="emailError" class="text-danger" style="display: none;">
            Please enter a valid email address (e.g., example@domain.com).
          </small>
        </div>

        <div class="modal-body">
          <label for="phone">Mobile</label>
          <input type="number" id="update-phone" class="form-control no-spinner" name="phone"
            placeholder="Mobile Number" value="{{User.phone}}" required>
        </div>

        <div class="modal-body">
          <label for="status" class="col-sm-3 col-form-label text-end">Status</label>
          <select name="status" id="status" class="form-control statuss">
            <option value="Active">Active</option>
            <option value="Inactive">Inactive</option>
          </select>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-success">Update</button>
        </div>
      </form>
    </div>
  </div>
</div>




<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModal" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 style="color: black; font-weight: 480;">Are you sure you want to delete this?</h4>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
        <a href="/admin/delete-admin/{{this._id}}" type="button" class="btn btn-danger">Yes</a>
      </div>
    </div>
  </div>
</div>

</body>

<script>
  const nameInput = document.getElementById('name');
  const errorMessage = document.getElementById('nameError');

  nameInput.addEventListener('input', function () {
    const namePattern = /^[a-zA-Z\s]{3,30}$/;
    if (!namePattern.test(nameInput.value)) {
      errorMessage.style.display = 'block'; // Show the error message
    } else {
      errorMessage.style.display = 'none'; // Hide the error message
    }
  });
</script>

<script>

  var phoneInput = document.querySelector("#phone");
  var iti = window.intlTelInput(phoneInput, {
    initialCountry: "auto",
    separateDialCode: true,
    preferredCountries: ['us', 'gb', 'ca'],
  });

  phoneInput.addEventListener("countrychange", function () {
    var selectedCountry = iti.getSelectedCountryData();
    var combinedDetails = {
      dialCode: selectedCountry.dialCode,
      countryCode: selectedCountry.iso2,
      countryName: selectedCountry.name,
    };

    console.log(combinedDetails);
  });



  input.addEventListener("input", function (e) {
    this.value = this.value.replace(/[^0-9]/g, '');
    if (this.value.length > 10) {
      this.value = this.value.slice(0, 10);
    }
  });
</script>


<script>
  function validatePasswords() {
    var password = document.getElementById('password').value;
    var confirmPassword = document.getElementById('confirmPassword').value;
    var errorElement = document.getElementById('passwordError');

    if (password !== confirmPassword) {
      errorElement.style.display = 'block';
      return false;
    } else {
      errorElement.style.display = 'none';
      return true;
    }
  }
  document.querySelector('form').addEventListener('submit', function (event) {
    if (!validatePasswords()) {
      event.preventDefault();
    }
  });
</script>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<script>
  function togglePasswordVisibility(fieldId, button) {
    const field = document.getElementById(fieldId);
    const icon = button.querySelector('i');

    if (field.type === 'password') {
      field.type = 'text';
      icon.classList.remove('fa-eye');
      icon.classList.add('fa-eye-slash');
    } else {
      field.type = 'password';
      icon.classList.remove('fa-eye-slash');
      icon.classList.add('fa-eye');
    }
  }
</script>

<script>
  function validateEmail(input) {

    input.value = input.value.toLowerCase();


    const emailRegex = /^[^\s@]+@[^\s@]+\.[a-z]{2,}$/i;
    const errorElement = document.getElementById('emailError');


    if (!emailRegex.test(input.value)) {
      errorElement.style.display = 'block';
    } else {
      errorElement.style.display = 'none';
    }
  }
</script>


<script>
  // Validate Name
  function validateName(input) {
    const namePattern = /^[a-zA-Z\s]{3,30}$/;
    const nameError = document.getElementById("nameError");
    if (!namePattern.test(input.value)) {
      nameError.style.display = "block"; // Show error message
      input.style.borderColor = "red"; // Highlight input border
      input.setCustomValidity("Invalid name");
    } else {
      nameError.style.display = "none"; // Hide error message
      input.style.borderColor = ""; // Reset input border
      input.setCustomValidity("");
    }
  }

  // Validate Email
  function validateEmail(input) {
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    const emailError = document.getElementById("emailError");
    if (!emailPattern.test(input.value)) {
      emailError.style.display = "block"; // Show error message
      input.style.borderColor = "red"; // Highlight input border
      input.setCustomValidity("Invalid email");
    } else {
      emailError.style.display = "none"; // Hide error message
      input.style.borderColor = ""; // Reset input border
      input.setCustomValidity("");
    }
  }


  // Validate Form Before Submitting
  function validateUpdateForm() {
    const nameInput = document.getElementById("update-name");
    const emailInput = document.getElementById("update-email");

    validateUpdateName(nameInput);
    validateUpdateEmail(emailInput);

    if (
      nameInput.checkValidity() &&
      emailInput.checkValidity() &&
    ) {
      return true; // Allow form submission
    }

    return false; // Prevent form submission
  }
</script>

<script>
  $(document).ready(function () {
    // Initialize DataTable
    if (!$.fn.DataTable.isDataTable('#example2')) {
      $('#example2').addClass('table table-bordered table-striped').DataTable({
        "paging": true,
      });
    }

    // Update modal functionality
    $('#updateModal').on('show.bs.modal', function (event) {
      var button = $(event.relatedTarget);
      var modal = $(this);
      var userId = button.data('id');
      var name = button.data('name');
      var email = button.data('email');
      var phone = button.data('phone');
      var status = button.data('status');

      modal.find('form').attr('action', '/admin/update-admin/' + userId);
      modal.find('#update-name').val(name);
      modal.find('#update-email').val(email);
      modal.find('#update-phone').val(phone);
      $(".statuss").val(status);
    });

    // Delete modal functionality
    $('#deleteModal').on('show.bs.modal', function (event) {
      var button = $(event.relatedTarget);
      var userId = button.data('id');
      var modal = $(this);
      modal.find('a.btn-danger').attr('href', '/admin/delete-admin/' + userId);
    });
  });
</script>

{{>footer}}

</html>